name: Android Release (Vidya)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Detect Flutter project dir
        id: detect
        run: |
          if [ -f pubspec.yaml ]; then
            echo "dir=." >> "$GITHUB_OUTPUT"
          elif [ -f ebook_reader/pubspec.yaml ]; then
            echo "dir=ebook_reader" >> "$GITHUB_OUTPUT"
          else
            echo "No pubspec.yaml found at repo root or ebook_reader/"; exit 1
          fi
          echo "Project dir: $(cat $GITHUB_OUTPUT)"

      - name: Print versions (debug)
        run: |
          pwd
          ls -la
          echo "----"
          ls -la "${{ steps.detect.outputs.dir }}"
          which flutter
          flutter --version
          java -version
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT"

      - name: Create android/local.properties
        working-directory: ${{ steps.detect.outputs.dir }}
        run: |
          mkdir -p android
          FLUTTER_BIN="$(which flutter)"
          FLUTTER_SDK="$(dirname "$(dirname "$FLUTTER_BIN")")"
          {
            echo "flutter.sdk=$FLUTTER_SDK"
            echo "sdk.dir=$ANDROID_SDK_ROOT"
          } > android/local.properties
          echo "---- android/local.properties ----"
          cat android/local.properties

      - name: Validate signing secrets
        run: |
          [ -n "${{ secrets.KEYSTORE_BASE64 }}" ] || (echo "Missing KEYSTORE_BASE64" && exit 1)
          [ -n "${{ secrets.KEYSTORE_PASSWORD }}" ] || (echo "Missing KEYSTORE_PASSWORD" && exit 1)
          [ -n "${{ secrets.KEY_ALIAS }}" ] || (echo "Missing KEY_ALIAS" && exit 1)
          [ -n "${{ secrets.KEY_PASSWORD }}" ] || (echo "Missing KEY_PASSWORD" && exit 1)

      - name: Decode keystore
        working-directory: ${{ steps.detect.outputs.dir }}
        run: |
          mkdir -p android/app
          echo "$KEYSTORE_BASE64" | base64 --decode > android/app/vidya.jks
          ls -lh android/app/vidya.jks
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Verify keystore (sanity)
        working-directory: ${{ steps.detect.outputs.dir }}
        run: |
          keytool -list -keystore android/app/vidya.jks \
            -storepass "${{ secrets.KEYSTORE_PASSWORD }}" \
            -alias "${{ secrets.KEY_ALIAS }}" -v | head -n 20

      - name: Create key.properties
        working-directory: ${{ steps.detect.outputs.dir }}
        run: |
          cat > android/key.properties <<'PROP'
          storeFile=android/app/vidya.jks
          storePassword=${{ secrets.KEYSTORE_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          PROP
          echo "---- android/key.properties ----"
          sed 's/=.*/=****/' android/key.properties

      # Remove google-services plugin lines whether files are .gradle or .kts
      - name: Disable google-services plugin for CI
        working-directory: ${{ steps.detect.outputs.dir }}
        run: |
          for f in android/app/build.gradle android/app/build.gradle.kts; do
            if [ -f "$f" ]; then
              sed -i 's/id("com.google.gms.google-services")//g' "$f" || true
            fi
          done
          for f in android/settings.gradle android/settings.gradle.kts; do
            if [ -f "$f" ]; then
              sed -i 's/^.*com.google.gms.google-services.*apply false.*$//g' "$f" || true
            fi
          done

      - name: Flutter pub get
        working-directory: ${{ steps.detect.outputs.dir }}
        run: |
          test -f pubspec.yaml || (echo "pubspec.yaml not found in $PWD" && exit 1)
          flutter pub get

      - name: Build release APK
        working-directory: ${{ steps.detect.outputs.dir }}
        run: flutter build apk --release -v

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: vidya-apk
          path: ${{ steps.detect.outputs.dir }}/build/app/outputs/flutter-apk/*.apk
